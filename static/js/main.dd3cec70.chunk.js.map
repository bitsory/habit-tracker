{"version":3,"sources":["components/habitAddForm.jsx","components/habit.jsx","components/habits.jsx","components/navbar.jsx","components/reset.jsx","app.jsx","index.js"],"names":["HabitAddForm","inputRef","React","createRef","onSubmit","event","preventDefault","name","current","value","props","OnAdd","console","log","className","this","ref","placeholder","size","PureComponent","Habit","state","count","handleIncreasement","OnIncrease","habitProp","handleDecreasement","OnDecrease","handleDelete","OnDelete","onClick","Habits","handleAdd","handleReset","habitsProp","map","key","id","Component","Navbar","totalCount","Reset","onReset","App","habits","tests","increaseHabits","item","setState","decreaseHabits","filter","addedHabits","Date","now","reset","length","getTotalCount","testsProp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd3cec70.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nclass HabitAddForm extends PureComponent {\r\n\r\n    inputRef = React.createRef();\r\n    \r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        //console.log(event);\r\n        //console.log(this.inputRef.current.value);\r\n        \r\n        const name = this.inputRef.current.value;\r\n        name && this.props.OnAdd(name);\r\n        this.inputRef.current.value = '';\r\n    };\r\n\r\n    // onSub = function onS(event) {\r\n    //     event.preventDefault();\r\n    //     console.log(this.test.current.value);\r\n    // }\r\n\r\n\r\n    render() {\r\n        console.log(\"habitAddForm.jsx\");\r\n        return (\r\n            <form className='add-form' onSubmit={this.onSubmit}>\r\n                <input\r\n                ref={this.inputRef} \r\n                className='add-input' \r\n                placeholder='Habit' \r\n                size=\"20\"></input>\r\n                <button className='habit-add'>ADD</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HabitAddForm;","import React, { PureComponent } from 'react';\r\n\r\nclass Habit extends PureComponent {\r\n    state = {\r\n        count: 0,\r\n    };\r\n\r\n   \r\n\r\n    handleIncreasement = () => {\r\n        this.props.OnIncrease(this.props.habitProp);\r\n        //this.props.habitProp.count++;\r\n    }\r\n\r\n    handleDecreasement = () => { \r\n        this.props.OnDecrease(this.props.habitProp);\r\n    }\r\n\r\n    handleDelete =() => {\r\n        this.props.OnDelete(this.props.habitProp);\r\n    }\r\n\r\n    render() {\r\n        console.log(`habit.jsx : ${this.props.habitProp.name}`);\r\n        //console.log(this.props);\r\n        \r\n        //const habitName = this.props.habitProp.name;\r\n        // const habitCount = this.props.habitProp.count;\r\n        const { name, count } = this.props.habitProp;\r\n        //const test = this.props.testProp;\r\n        return ( \r\n        <li className=\"habit\">\r\n            <span className=\"habit-name\">{name}</span>\r\n            <span className=\"habit-count\">{count}</span>\r\n            <button className=\"habit-button habit-increase\" \r\n                onClick={this.handleIncreasement}>\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <button className=\"habit-button habit-decrease\" \r\n                onClick={this.handleDecreasement}>\r\n                <i className=\"fas fa-minus-square\"></i>\r\n            </button>\r\n            <button className=\"habit-button habit-delete\"\r\n                onClick={this.handleDelete}>\r\n                <i className=\"fas fa-trash-alt\"></i>                \r\n            </button>\r\n            {/* <span className='test'>{test}</span> */}\r\n\r\n        </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habit;","import React, { Component } from 'react';\r\nimport Habit from './habit';\r\n//import HabitAddForm from './habitAddForm';\r\n//import Test from './test';\r\n\r\n\r\nclass Habits extends Component {\r\n    /*\r\n    state = {\r\n        \r\n        habits: [\r\n            { id : 1, name: 'Reading', count: 0 },\r\n            { id : 2, name: 'Running', count: 0 },\r\n            { id : 3, name: 'Coding', count: 0 }\r\n        ],\r\n        \r\n        tests: [ \r\n            { name : 'dreams'},\r\n            { name : 'come'},\r\n            { name : 'true'}\r\n        ],\r\n\r\n        simple: 'test'\r\n    };\r\n    */\r\n    handleIncreasement = (event) => {\r\n        /*\r\n        console.log(event);\r\n        //this.state.Habits.count++;\r\n        //event.count++;\r\n        const habits = [...this.state.habits];  // deep copy\r\n        const index = habits.indexOf(event);\r\n        habits[index].count++;\r\n        this.setState({habits});\r\n        */\r\n       this.props.OnIncrease(event);\r\n    };\r\n\r\n    handleDecreasement = (event) => {\r\n        /*\r\n        console.log(event);\r\n        const habits = [...this.state.habits];\r\n        const index = habits.indexOf(event);\r\n        if (habits[index].count > 0) {\r\n            habits[index].count--;\r\n        }\r\n        this.setState({habits});\r\n        */\r\n       this.props.OnDecrease(event);\r\n    };\r\n\r\n    handleDelete = (event) => {\r\n        /*\r\n        const habits = this.state.habits.filter(item => item !== event);\r\n        this.setState({habits});\r\n        */\r\n        this.props.OnDelete(event);\r\n        /*\r\n        The filter() method creates a new array with all \r\n        elements that pass the test implemented by the provided function.\r\n\r\n        const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\r\n\r\n        const result = words.filter(word => word.length > 6);\r\n        \r\n        expected output: Array [\"exuberant\", \"destruction\", \"present\"]\r\n        */\r\n\r\n    };\r\n\r\n    handleAdd = (name) => {\r\n        this.props.OnAdd(name);\r\n        //console.log(name);\r\n    }\r\n\r\n    handleReset = (event) => {\r\n        console.log(event);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        console.log(\"habits.jsx\");\r\n        return (\r\n            <>                      \r\n            { \r\n            //this.state.habits.map( (event) =>\r\n            this.props.habitsProp.map( (event) =>            \r\n                \r\n                <Habit\r\n                    key={event.id}\r\n                    habitProp={event}\r\n                    OnIncrease={this.handleIncreasement}\r\n                    OnDecrease={this.handleDecreasement}\r\n                    OnDelete={this.handleDelete}\r\n                >\r\n                </Habit>\r\n                \r\n            )}\r\n            \r\n            {/* {\r\n            //this.state.tests.map( (event) =>\r\n            this.props.testsProp.map( (event) =>\r\n                <Test   \r\n                key = {event.id}               \r\n                testProp = {event}                               \r\n                >\r\n\r\n                </Test>\r\n            )} */}\r\n            \r\n            \r\n            </>\r\n                /*\r\n                The map() method creates a new array populated with the results of calling \r\n                a provided function on every element in the calling array.\r\n\r\n                const array1 = [1, 4, 9, 16];\r\n                \r\n                const map1 = array1.map(x => x * 2);\r\n\r\n                console.log(map1);\r\n                \r\n                expected output: Array [2, 8, 18, 32]\r\n\r\n                */\r\n             \r\n        );\r\n    }\r\n}\r\n\r\nexport default Habits;","import React, { PureComponent } from 'react';\r\n\r\nclass Navbar extends PureComponent {\r\n    state = {\r\n        totalCount : 0\r\n    };\r\n    \r\n    render() {\r\n        console.log(\"navbar.jsx\");\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <i className=\"navbar-logo fas fa-leaf\"></i>\r\n                <span>Habit Tracker</span>\r\n                <span className=\"counter\">{this.props.totalCount}</span>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nclass Reset extends Component {\r\n    handleReset =() => {\r\n        this.props.onReset();\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"habit-reset\" onClick={this.handleReset}>Reset All</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reset;","import React, { Component } from 'react';\n\nimport './app.css';\nimport HabitAddForm from './components/habitAddForm';\n//import Habit from './components/habit';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\nimport Reset from './components/reset';\n\nclass App extends Component {\n  state = {\n\n        \n    habits: [\n        { id : 1, name: 'Reading', count: 0 },\n        { id : 2, name: 'Running', count: 0 },\n        { id : 3, name: 'Coding', count: 0 }\n    ],\n    \n    tests: [ \n        { id : 4, name : 'dreams'},\n        { id : 5, name : 'come'},\n        { id : 6, name : 'true'}\n    ]\n  };\n\n  handleIncreasement = (event) => {\n    console.log(event);\n    //this.state.Habits.count++;\n    //event.count++;\n    /*\n    const incHabits = [...this.state.habits];  // deep copy\n    const index = incHabits.indexOf(event);\n    incHabits[index].count++;\n    this.setState({habits : incHabits});\n    */\n\n    const increaseHabits = this.state.habits.map(item => {\n        if (item.id === event.id) {\n          return { ...event, count: event.count +1};\n        }\n          return item;\n      });\n    this.setState({ habits : increaseHabits });\n  };\n\n  handleDecreasement = (event) => {\n    \n    const decreaseHabits = this.state.habits.map(item => {\n      if (item.id === event.id) {\n        return {...event, count: (event.count) > 0 ? event.count -1 : 0};\n      } \n        return item;\n    });\n    this.setState({ habits : decreaseHabits });\n    \n    console.log(event);\n    /*\n    const habits = [...this.state.habits];\n    const index = habits.indexOf(event);\n    if (habits[index].count > 0) {\n        habits[index].count--;\n    }\n    this.setState({habits});\n    */\n  };\n\n  handleDelete = (event) => {\n    const habits = this.state.habits.filter(item => item !== event);\n    this.setState({habits});\n  };\n\n  //function App() {\n\n  getTotalCount() {\n    const totalCount = this.state.habits.filter(item =>item.count >0).length;\n    return totalCount;\n  }\n\n  handleAdd = (name) => {\n    const addedHabits = [...this.state.habits, {id:Date.now(), name:name, count:0}];\n    this.setState({habits : addedHabits});\n    console.log(name);\n  }\n\n  reset = () => {\n    const habits = this.state.habits.map( item => {\n      \n      if (item.count !== 0) {\n        return {...item, count: 0};\n      }\n        return item;\n    });\n    this.setState({habits});\n    \n    \n    console.log(\"reset\");\n    /*\n    const habits = [...this.state.habits];\n    // const resetHabits = habits.map( (habit) => habit.count = 0 );\n\n    const resetHabits = habits.map( (habit) => {\n      habit.count = 0;\n      //return habit;\n    });\n\n    this.setState({resetHabits});\n    */\n  };\n\n\n  render() {\n    console.log(\"app.jsx\");\n\n    \n\n    return( \n      <div> \n      {<Navbar\n        totalCount = {this.getTotalCount()}\n      />}\n      <p/>\n      \n      {<HabitAddForm\n                OnAdd={this.handleAdd}\n            ></HabitAddForm>}\n      <p/>\n      {<Habits \n        habitsProp = {this.state.habits}\n        OnIncrease = {this.handleIncreasement}\n        OnDecrease = {this.handleDecreasement}   \n        OnDelete = {this.handleDelete}\n        // OnAdd = {this.handleAdd}\n        testsProp = {this.state.tests}\n      />}\n\n      \n      {<Reset\n        onReset = {this.reset}\n      />}\n      \n      </div>\n    )\n  };\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}